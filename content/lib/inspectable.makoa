<%!
    import json
    import mako.runtime

	##  Conditional inheritance
	#   def inherit(context):
	#       """
	#       Conditional inheritance.
	#       If we have "inspect" inside the context, we don't inherit page.
	#       We just give back information about this blog post.

	#       If we don't have "inspect" inside the context, we inherit page as
	#       usual.
	#       """
	#       if context.get("inspect") == True:
	#           return None
	#       else:
	#           return "/page.makoa"

    class ExceptErrorInspecting(Exception):
        pass

%>

## Conditional inheritance:
## <%inherit file="${inherit(context)}"/>

## If we are being "inspected", we give back the metadata.
## If we are not inspected, we give back usual page.

<%def name="get_data()">
<%
    # Check if we have "inspect" inside the context:
    key = context.get("inspect")
    if key is not None:
        # If we have "inspect" inside the context, we return the inspected
        # value.
        try:
            # Try running "self.${key}()"
            raw_content = getattr(self,key)()
        except:
            raise ExceptErrorInspecting(context)

        return json.dumps(raw_content)

    # If we don't have "inspect" inside the context, we just
    # return the usual body of the page.
    return next.body()
%>
</%def>

${get_data()}

